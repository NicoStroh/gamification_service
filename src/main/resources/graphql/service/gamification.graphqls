# schema file of the microservice

# define data types, queries and mutations
# this can be done in a separate files as long as they are in this folder and
# end with .graphqls


type Badge {
  badgeUUID: UUID!
  name: String!
  description: String
  passingPercentage: Int!
  quizUUID: UUID
  flashCardSetUUID: UUID
}

type UserBadge {
  userBadgeUUID: UUID!
  userUUID: UUID!
  badgeUUID: UUID!
  achieved: Boolean!
}

type Query {
  userBadges(userUUID: UUID!): [UserBadge!]
  achievedBadges(userUUID: UUID!): [UserBadge!]
  badgesByQuiz(quizUUID: UUID!): [Badge!]
  badgesByFlashCardSet(flashCardSetUUID: UUID!): [Badge!]
}

type Mutation {
  assignBadgeToUser(userUUID: UUID!, badgeUUID: UUID!): String
  markBadgeAsAchieved(userUUID: UUID!, badgeUUID: UUID!): String
  createBadgeForQuiz(quizUUID: UUID!, name: String!, description: String, passingPercentage: Int!): Badge
  createBadgeForFlashCardSet(flashCardSetUUID: UUID!, name: String!, description: String, passingPercentage: Int!): Badge
}